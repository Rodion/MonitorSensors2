-- MySQL Script generated by MySQL Workbench
-- Fri Jul  2 01:46:44 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema monitorsensors
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema monitorsensors
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `monitorsensors` DEFAULT CHARACTER SET utf8;
USE `monitorsensors`;

-- -----------------------------------------------------
-- Table `monitorsensors`.`sensor_unit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `monitorsensors`.`sensor_unit`
(
    `Id`   INT(11)     NOT NULL AUTO_INCREMENT COMMENT ' Id юнита.Первичный синтетический ключ таблицы.',
    `unit` VARCHAR(60) NOT NULL COMMENT ' bar, voltage, °С, %',
    PRIMARY KEY (`Id`)
)
    ENGINE = InnoDB
    AUTO_INCREMENT = 34
    DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `monitorsensors`.`sensor_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `monitorsensors`.`sensor_types`
(
    `Id`   INT(11)     NOT NULL AUTO_INCREMENT COMMENT ' Id типа.Первичный синтетический ключ таблицы.',
    `Type` VARCHAR(20) NOT NULL COMMENT ' Описание типа: Pressure,    Voltage,    Temperature,    Humidity ',
    PRIMARY KEY (`Id`)
)
    ENGINE = InnoDB
    AUTO_INCREMENT = 7
    DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `monitorsensors`.`sensors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `monitorsensors`.`sensors`
(
    `Id`          INT(11)      NOT NULL AUTO_INCREMENT COMMENT ' Id сенсора.Первичный синтетический ключ таблицы.',
    `Name`        VARCHAR(30)  NOT NULL,
    `Model`       VARCHAR(15)  NOT NULL,
    `Range_from`  INT(11)      NULL,
    `Range_to`    INT(11)      NULL,
    `Types_Id`    INT(11)      NOT NULL COMMENT ' Внешний ключ таблицы для связи с таблицей Типы Сенсоров.',
    `Unit_Id`     INT(11)      NOT NULL COMMENT ' Внешний ключ таблицы для связи с таблицей Юниты Сенсоров' ,
    `Location`    VARCHAR(40)  NULL,
    `Description` VARCHAR(200) NULL,
    PRIMARY KEY (`Id`)
)

    ENGINE = InnoDB
    AUTO_INCREMENT = 74
    DEFAULT CHARACTER SET = utf8
    COMMENT = 'Таблица сенсоров. Основной элемент программы. Связана связями многие ко многим с таблицей Пользователи.';


-- -----------------------------------------------------
-- Table `monitorsensors`.`roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `monitorsensors`.`roles`
(
    `Id`   INT(11)     NOT NULL AUTO_INCREMENT COMMENT ' Id роли.Первичный синтетический ключ таблицы.',
    `Role` VARCHAR(20) NOT NULL COMMENT ' Тип роли.',
    PRIMARY KEY (`Id`)
)
    ENGINE = InnoDB
    AUTO_INCREMENT = 6
    DEFAULT CHARACTER SET = utf8
    COMMENT = 'Таблица ролей пользователя. Администратор, обычный пользователь';


-- -----------------------------------------------------
-- Table `monitorsensors`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `monitorsensors`.`users`
(
    `Id`         INT(11)     NOT NULL AUTO_INCREMENT COMMENT ' Поле id пользователя.Первичный синтетический ключ таблицы.',
    `Login`      VARCHAR(10) NOT NULL COMMENT ' Логин пользователя для входа в систему.Также является альтернативным ключом или уникальным индексом.',
    `Password`   VARCHAR(32) NOT NULL COMMENT  'Пароль пользователя для входа в систему.',
    `First_Name` VARCHAR(15) NOT NULL COMMENT ' Имя пользователя.',
    `Last_Name`  VARCHAR(15) NOT NULL COMMENT ' Фамилия пользователя.',
    `Roles_Id`   INT(11)     NOT NULL DEFAULT 2,
    PRIMARY KEY (`Id`, `Roles_Id`),
    UNIQUE INDEX `Login_UNIQUE` (`Login` ASC) VISIBLE,
    INDEX `fk_users_roles1_idx` (`Roles_Id` ASC) VISIBLE,
    CONSTRAINT `fk_users_roles1`
        FOREIGN KEY (`Roles_Id`)
            REFERENCES `monitorsensors`.`roles` (`Id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB
    AUTO_INCREMENT = 17
    DEFAULT CHARACTER SET = utf8
    COMMENT = 'Таблица Пользователей. Содержит информацию о пользователе. Дополнительный уникальный индекс - поле Login.';



-- -----------------------------------------------------
-- Table `monitorsensors`.`sensor_change`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `monitorsensors`.`sensor_change`
(
    `Id`         INT(11) NOT NULL AUTO_INCREMENT,
    `Users_Id`   INT(11) NOT NULL,
    `Sensors_Id` INT(11) NOT NULL COMMENT '\n',
    PRIMARY KEY (`Id`)

)
    ENGINE = InnoDB
    AUTO_INCREMENT = 41
    DEFAULT CHARACTER SET = utf8
    COMMENT =    'Таблица связи многие ко многим для таблиц Пользователи и Сенсоры. Отображает, в какие  сенсоры админ вносил изменения\n';


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;

